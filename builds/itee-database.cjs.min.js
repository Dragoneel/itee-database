"use strict";const{isNullOrUndefined:isNullOrUndefined,isDefined:isDefined,isArray:isArray,isNotEmptyArray:isNotEmptyArray,isNotEmptyObject:isNotEmptyObject}=require("itee-validators"),I=require("i-return");class TAbstractDataController{constructor(e){this._parameters=e}static __checkData(e,t,r){const n=t.body,i=t.params,s=t.query;return isDefined(n)&&n[e]?n[e]:isDefined(i)&&i[e]?i[e]:isDefined(s)&&s[e]?s[e]:void I.returnError({title:"Erreur de paramètre",message:e+" n'existe pas dans les paramètres !"},r)}create(e,t){const r=e.body;if(isNullOrUndefined(r))return void I.returnError({title:"Erreur de paramètre",message:"Aucun paramètre n'a été reçu !"},t);isArray(r)?this._createSome(r,t):this._createOne(r,t)}_createOne(e,t){}_createSome(e,t){}read(e,t){const r=e.body,n=e.params.id;t.set("Content-Type","application/json"),isDefined(r)?isNotEmptyObject(r)?this._readByObject(r,t):isNotEmptyArray(r)?this._readByArray(r,t):I.returnError({title:"Erreur de paramètre",message:"La requête ne contient pas de données !"},t):isDefined(n)?this._readById(n,t):this._readAll(t)}_readById(e,t){}_readByArray(e,t){}_readByObject(e,t){}_readAll(e){}update(e,t){const r=e.body,n=e.params.id;isDefined(r)?isNotEmptyObject(r)?this._updateByObject(r,t):isNotEmptyArray(r)?this._updateByArray(r,t):I.returnError({title:"Erreur de paramètre",message:"La requête ne contient pas de données !"},t):isDefined(n)?this._updateById(n,t):this._updateAll(t)}_updateById(e,t){}_updateByArray(e,t){}_updateByObject(e,t){}_updateAll(e){}delete(e,t){const r=e.body,n=e.params.id;isDefined(r)?isNotEmptyObject(r)?this._deleteByObject(r,t):isNotEmptyArray(r)?this._deleteByArray(r,t):I.returnError({title:"Erreur de paramètre",message:"La requête ne contient pas de données !"},t):isDefined(n)?this._deleteById(n,t):this._deleteAll(t)}_deleteById(e,t){}_deleteByArray(e,t){}_deleteByObject(e,t){}_deleteAll(e){}}module.exports=TAbstractDataController;const fs=require("fs"),{Writable:Writable}=require("stream"),globalBuffer=require("buffer");class MemoryWriteStream extends Writable{constructor(e){super(e);const t=e.bufferSize||globalBuffer.kStringMaxLength;this.memoryBuffer=Buffer.alloc(t),this.offset=0}_write(e,t,r){const n=Buffer.isBuffer(e)?e:new Buffer(e,t);for(let e=0,t=n.length;e<t;e++)this.memoryBuffer[this.offset]=n[e],this.offset++;r()}_writev(e,t){for(let t=0,r=e.length;t<r;t++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[t]]);t()}_final(e){e()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;++t)r[t]=e[t];return this._releaseMemory(),t}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}toJSON(){return JSON.parse(this.toString())}}class TAbstractFileConverter{constructor(){this.dumpType="arraybuffer",this._isProcessing=!1,this._filesQueue=[],this._fileData=void 0}convert(e,t,r,n,i){this._filesQueue.push({file:e,parameters:t,onSuccess:r,onProgress:n,onError:i}),this._isProcessing||this._processQueue()}_processQueue(){function e(e){i._fileData=e,i._convert(a,t,r,n)}function t(e){i._releaseMemory(),u(e),i._processQueue()}function r(e){c(e)}function n(e){f(e),i._processQueue()}if(0===this._filesQueue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const i=this,s=this._filesQueue.shift(),o=s.file,a=s.parameters,u=s.onSuccess,c=s.onProgress,f=s.onError;i._dumpFileInMemoryAs(this.dumpType,o,a,e,r,n)}_dumpFileInMemoryAs(e,t,r,n,i,s){let o=!1;const a=fs.createReadStream(t);a.on("error",e=>{o=!0;s(e)});const u=parseInt(r.fileSize),c=new MemoryWriteStream({bufferSize:u});c.on("error",e=>{o=!0;s(e)}),c.on("finish",()=>{if(o)return;switch(e){case"arraybuffer":n(c.toArrayBuffer());break;case"string":n(c.toString());break;case"json":n(c.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}a.unpipe();a.close();c.end()}),a.pipe(c)}_releaseMemory(){this._fileData=null}_convert(e,t,r,n){}}TAbstractFileConverter.MAX_FILE_SIZE=67108864,module.exports={MemoryWriteStream:MemoryWriteStream,TAbstractFileConverter:TAbstractFileConverter};class TAbstractDatabase{constructor(e,t,r,n=[],i=1e4){this.routes={},this._driver=e,this._application=t,this._router=r,this._plugins=n,this._autoReconnectTimeout=i,this._autoConnectionTimer=null,this.__init()}__init(){const e=this._plugins;for(let t=0,r=e.length;t<r;t++){const r=e[t];let n=void 0;try{n=require(r)}catch(e){continue}n.registerTo(this._driver,this._application,this._router)}this._init()}_init(){}connect(){}startAutoConnect(){this._autoConnectionTimer||(this._autoConnectionTimer=setInterval(this.connect.bind(this),this._autoReconnectTimeout))}stopAutoConnect(){this._autoConnectionTimer&&(clearInterval(this._autoConnectionTimer),this._autoConnectionTimer=null)}close(e){}on(e,t){}}module.exports=TAbstractDatabase;const TAbstractDatabase$1=require("./TAbstractDatabase"),driver=require("mongoose");class TMongoDBDatabase extends TAbstractDatabase$1{constructor(e,t,r,n){super(driver,e,t,r,n),this.databaseUrl=n.databaseUrl}_init(){}connect(){this._driver.connect(this.databaseUrl,{})}close(e){this._driver.connection.close(e)}on(e,t){-1!==["connecting","connected","open","disconnecting","disconnected","reconnected","close","error"].indexOf(e)&&this._driver.connection.on(e,t)}}module.exports=TMongoDBDatabase;class TAbstractDatabasePlugin{constructor(e){this.routes={}}registerTo(e){}addRoutesTo(e){let t=e;for(let e in this.routes)t[e]||(t[e]=this.routes[e]);return t}}module.exports=TAbstractDatabasePlugin;
