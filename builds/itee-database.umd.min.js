!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(0,function(){"use strict";const{isNullOrUndefined:isNullOrUndefined,isDefined:isDefined,isArray:isArray,isNotEmptyArray:isNotEmptyArray,isNotEmptyObject:isNotEmptyObject}=require("itee-validators"),e=require("i-return");class t{constructor(e){this._parameters=e}static __checkData(t,n,r){const i=n.body,o=n.params,s=n.query;return isDefined(i)&&i[t]?i[t]:isDefined(o)&&o[t]?o[t]:isDefined(s)&&s[t]?s[t]:void e.returnError({title:"Erreur de paramètre",message:t+" n'existe pas dans les paramètres !"},r)}create(t,n){const r=t.body;if(isNullOrUndefined(r))return void e.returnError({title:"Erreur de paramètre",message:"Aucun paramètre n'a été reçu !"},n);isArray(r)?this._createSome(r,n):this._createOne(r,n)}_createOne(e,t){}_createSome(e,t){}read(t,n){const r=t.body,i=t.params.id;n.set("Content-Type","application/json"),isDefined(r)?isNotEmptyObject(r)?this._readByObject(r,n):isNotEmptyArray(r)?this._readByArray(r,n):e.returnError({title:"Erreur de paramètre",message:"La requête ne contient pas de données !"},n):isDefined(i)?this._readById(i,n):this._readAll(n)}_readById(e,t){}_readByArray(e,t){}_readByObject(e,t){}_readAll(e){}update(t,n){const r=t.body,i=t.params.id;isDefined(r)?isNotEmptyObject(r)?this._updateByObject(r,n):isNotEmptyArray(r)?this._updateByArray(r,n):e.returnError({title:"Erreur de paramètre",message:"La requête ne contient pas de données !"},n):isDefined(i)?this._updateById(i,n):this._updateAll(n)}_updateById(e,t){}_updateByArray(e,t){}_updateByObject(e,t){}_updateAll(e){}delete(t,n){const r=t.body,i=t.params.id;isDefined(r)?isNotEmptyObject(r)?this._deleteByObject(r,n):isNotEmptyArray(r)?this._deleteByArray(r,n):e.returnError({title:"Erreur de paramètre",message:"La requête ne contient pas de données !"},n):isDefined(i)?this._deleteById(i,n):this._deleteAll(n)}_deleteById(e,t){}_deleteByArray(e,t){}_deleteByObject(e,t){}_deleteAll(e){}}module.exports=t;const n=require("fs"),{Writable:Writable}=require("stream"),r=require("buffer");class i extends Writable{constructor(e){super(e);const t=e.bufferSize||r.kStringMaxLength;this.memoryBuffer=Buffer.alloc(t),this.offset=0}_write(e,t,n){const r=Buffer.isBuffer(e)?e:new Buffer(e,t);for(let e=0,t=r.length;e<t;e++)this.memoryBuffer[this.offset]=r[e],this.offset++;n()}_writev(e,t){for(let t=0,n=e.length;t<n;t++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[t]]);t()}_final(e){e()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,t=new ArrayBuffer(e.length),n=new Uint8Array(t);for(let t=0;t<e.length;++t)n[t]=e[t];return this._releaseMemory(),t}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}toJSON(){return JSON.parse(this.toString())}}class o{constructor(){this.dumpType="arraybuffer",this._isProcessing=!1,this._filesQueue=[],this._fileData=void 0}convert(e,t,n,r,i){this._filesQueue.push({file:e,parameters:t,onSuccess:n,onProgress:r,onError:i}),this._isProcessing||this._processQueue()}_processQueue(){function e(e){i._fileData=e,i._convert(u,t,n,r)}function t(e){i._releaseMemory(),c(e),i._processQueue()}function n(e){f(e)}function r(e){a(e),i._processQueue()}if(0===this._filesQueue.length)return void(this._isProcessing=!1);this._isProcessing=!0;const i=this,o=this._filesQueue.shift(),s=o.file,u=o.parameters,c=o.onSuccess,f=o.onProgress,a=o.onError;i._dumpFileInMemoryAs(this.dumpType,s,u,e,n,r)}_dumpFileInMemoryAs(e,t,r,o,s,u){let c=!1;const f=n.createReadStream(t);f.on("error",e=>{c=!0;u(e)});const a=parseInt(r.fileSize),h=new i({bufferSize:a});h.on("error",e=>{c=!0;u(e)}),h.on("finish",()=>{if(c)return;switch(e){case"arraybuffer":o(h.toArrayBuffer());break;case"string":o(h.toString());break;case"json":o(h.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}f.unpipe();f.close();h.end()}),f.pipe(h)}_releaseMemory(){this._fileData=null}_convert(e,t,n,r){}}o.MAX_FILE_SIZE=67108864,module.exports={MemoryWriteStream:i,TAbstractFileConverter:o};class s{constructor(e,t,n,r=[],i=1e4){this.routes={},this._driver=e,this._application=t,this._router=n,this._plugins=r,this._autoReconnectTimeout=i,this._autoConnectionTimer=null,this.__init()}__init(){const e=this._plugins;for(let t=0,n=e.length;t<n;t++){const n=e[t];let r=void 0;try{r=require(n)}catch(e){continue}r.registerTo(this._driver,this._application,this._router)}this._init()}_init(){}connect(){}startAutoConnect(){this._autoConnectionTimer||(this._autoConnectionTimer=setInterval(this.connect.bind(this),this._autoReconnectTimeout))}stopAutoConnect(){this._autoConnectionTimer&&(clearInterval(this._autoConnectionTimer),this._autoConnectionTimer=null)}close(e){}on(e,t){}}module.exports=s;const u=require("./TAbstractDatabase"),c=require("mongoose");class f extends u{constructor(e,t,n,r){super(c,e,t,n,r),this.databaseUrl=r.databaseUrl}_init(){}connect(){this._driver.connect(this.databaseUrl,{})}close(e){this._driver.connection.close(e)}on(e,t){-1!==["connecting","connected","open","disconnecting","disconnected","reconnected","close","error"].indexOf(e)&&this._driver.connection.on(e,t)}}module.exports=f;class a{constructor(e){this.routes={}}registerTo(e){}addRoutesTo(e){let t=e;for(let e in this.routes)t[e]||(t[e]=this.routes[e]);return t}}module.exports=a});
